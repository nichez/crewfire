{
    "sourceFile": "crewfire-backend/app/controllers/feedController.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 52,
            "patches": [
                {
                    "date": 1643932034868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1643932076345,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,22 +4,14 @@\n const dotenv = require('dotenv');\n dotenv.config();\n \n class FeedController {\n-  getAllArtikli = async (req, res, next) => {\n-    let artikli = await Artikal.find();\n+  getAllFeeds = async (req, res, next) => {\n+    let feeds = await Feed.getFeeds();\n \n-    artikli = artikli.map((item) => {\n-      if (item.tarifen_broj_ddv === 2) {\n-        item.tarifen_broj_ddv = 18;\n-      } else if (item.tarifen_broj_ddv === 1) {\n-        item.tarifen_broj_ddv = 5;\n-      }\n+    console.log('ctrl feeds ', feeds);\n \n-      return item;\n-    });\n-\n-    res.send(artikli);\n+    res.send(feeds);\n   };\n \n   checkValidation = (req) => {\n     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643932891763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,16 @@\n const Feed = require('../models/feedModel');\n const HttpException = require('../utils/HttpException.utils');\n const { validationResult } = require('express-validator');\n const dotenv = require('dotenv');\n+const axios = require('axios');\n dotenv.config();\n \n class FeedController {\n   getAllFeeds = async (req, res, next) => {\n-    let feeds = await Feed.getFeeds();\n+    const response = await axios.get('https://dog.ceo/api/breeds/list/all');\n \n-    console.log('ctrl feeds ', feeds);\n-\n-    res.send(feeds);\n+    res.send(response);\n   };\n \n   checkValidation = (req) => {\n     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643933301274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n class FeedController {\n   getAllFeeds = async (req, res, next) => {\n     const response = await axios.get('https://dog.ceo/api/breeds/list/all');\n \n-    res.send(response);\n+    res.status(200).json(response);\n   };\n \n   checkValidation = (req) => {\n     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643933323425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,11 +6,11 @@\n dotenv.config();\n \n class FeedController {\n   getAllFeeds = async (req, res, next) => {\n-    const response = await axios.get('https://dog.ceo/api/breeds/list/all');\n+    // const response = await axios.get('https://dog.ceo/api/breeds/list/all');\n \n-    res.status(200).json(response);\n+    res.status(200).json({response: 'dadtata'});\n   };\n \n   checkValidation = (req) => {\n     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643933360501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,12 @@\n dotenv.config();\n \n class FeedController {\n   getAllFeeds = async (req, res, next) => {\n-    // const response = await axios.get('https://dog.ceo/api/breeds/list/all');\n+    const response = await axios.get('https://dog.ceo/api/breeds/list/all');\n \n+    console.log('RESPONSE dog ', response);\n+\n     res.status(200).json({response: 'dadtata'});\n   };\n \n   checkValidation = (req) => {\n"
                },
                {
                    "date": 1643933433921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,13 +13,13 @@\n \n     res.status(200).json({response: 'dadtata'});\n   };\n \n-  checkValidation = (req) => {\n-    const errors = validationResult(req);\n-    if (!errors.isEmpty()) {\n-      throw new HttpException(400, 'Validation faild', errors);\n-    }\n-  };\n+//   checkValidation = (req) => {\n+//     const errors = validationResult(req);\n+//     if (!errors.isEmpty()) {\n+//       throw new HttpException(400, 'Validation faild', errors);\n+//     }\n+//   };\n }\n \n module.exports = new FeedController();\n"
                },
                {
                    "date": 1643933463559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,14 @@\n const Feed = require('../models/feedModel');\n const HttpException = require('../utils/HttpException.utils');\n-const { validationResult } = require('express-validator');\n+// const { validationResult } = require('express-validator');\n const dotenv = require('dotenv');\n const axios = require('axios');\n dotenv.config();\n \n class FeedController {\n   getAllFeeds = async (req, res, next) => {\n+    console.log('getAllFeeds');\n     const response = await axios.get('https://dog.ceo/api/breeds/list/all');\n \n     console.log('RESPONSE dog ', response);\n \n"
                },
                {
                    "date": 1643933484084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n   getAllFeeds = async (req, res, next) => {\n     console.log('getAllFeeds');\n     const response = await axios.get('https://dog.ceo/api/breeds/list/all');\n \n-    console.log('RESPONSE dog ', response);\n+    console.log('RESPONSE dog ', response.data);\n \n     res.status(200).json({response: 'dadtata'});\n   };\n \n"
                },
                {
                    "date": 1643933504587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     const response = await axios.get('https://dog.ceo/api/breeds/list/all');\n \n     console.log('RESPONSE dog ', response.data);\n \n-    res.status(200).json({response: 'dadtata'});\n+    res.status(200).json(response.data);\n   };\n \n //   checkValidation = (req) => {\n //     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643933520636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n \n class FeedController {\n   getAllFeeds = async (req, res, next) => {\n     console.log('getAllFeeds');\n-    const response = await axios.get('https://dog.ceo/api/breeds/list/all');\n+    const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n \n     console.log('RESPONSE dog ', response.data);\n \n     res.status(200).json(response.data);\n"
                },
                {
                    "date": 1643933549774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n \n     console.log('RESPONSE dog ', response.data);\n \n-    res.status(200).json(response.data);\n+    res.status(200).json(JSON.parse(response.data));\n   };\n \n //   checkValidation = (req) => {\n //     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643933563255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n \n     console.log('RESPONSE dog ', response.data);\n \n-    res.status(200).json(JSON.parse(response.data));\n+    res.status(200).json(JSON.stringify(response.data));\n   };\n \n //   checkValidation = (req) => {\n //     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643933583698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n \n     console.log('RESPONSE dog ', response.data);\n \n-    res.status(200).json(JSON.stringify(response.data));\n+    res.status(200).json(response.data.items);\n   };\n \n //   checkValidation = (req) => {\n //     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643933644916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,11 @@\n     const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n \n     console.log('RESPONSE dog ', response.data);\n \n-    res.status(200).json(response.data.items);\n+    const { items } = response.data;\n+\n+    res.status(200).json(items);\n   };\n \n //   checkValidation = (req) => {\n //     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643933662548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,12 +9,12 @@\n   getAllFeeds = async (req, res, next) => {\n     console.log('getAllFeeds');\n     const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n \n-    console.log('RESPONSE dog ', response.data);\n-\n     const { items } = response.data;\n \n+    console.log('RESPONSE items ', items);\n+\n     res.status(200).json(items);\n   };\n \n //   checkValidation = (req) => {\n"
                },
                {
                    "date": 1643933683745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,11 +11,11 @@\n     const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n \n     const { items } = response.data;\n \n-    console.log('RESPONSE items ', items);\n+    console.log('RESPONSE items ', response.data.items);\n \n-    res.status(200).json(items);\n+    res.status(200).json(response.data.items);\n   };\n \n //   checkValidation = (req) => {\n //     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643933704093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,8 @@\n   getAllFeeds = async (req, res, next) => {\n     console.log('getAllFeeds');\n     const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n \n-    const { items } = response.data;\n-\n     console.log('RESPONSE items ', response.data.items);\n \n     res.status(200).json(response.data.items);\n   };\n"
                },
                {
                    "date": 1643933718223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n \n     console.log('RESPONSE items ', response.data.items);\n \n-    res.status(200).json(response.data.items);\n+    res.json(response.data.items);\n   };\n \n //   checkValidation = (req) => {\n //     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643933730921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n   getAllFeeds = async (req, res, next) => {\n     console.log('getAllFeeds');\n     const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n \n-    console.log('RESPONSE items ', response.data.items);\n+    console.log('RESPONSE items ', response.data);\n \n     res.json(response.data.items);\n   };\n \n"
                },
                {
                    "date": 1643933748997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n \n     console.log('RESPONSE items ', response.data);\n \n-    res.json(response.data.items);\n+    res.json(response.data);\n   };\n \n //   checkValidation = (req) => {\n //     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643933805850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n \n     console.log('RESPONSE items ', response.data);\n \n-    res.json(response.data);\n+    res.json(response.data.json());\n   };\n \n //   checkValidation = (req) => {\n //     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643933830044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n \n     console.log('RESPONSE items ', response.data);\n \n-    res.json(response.data.json());\n+    res.json(JSON.parse(response.data));\n   };\n \n //   checkValidation = (req) => {\n //     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643933854559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n \n     console.log('RESPONSE items ', response.data);\n \n-    res.json(JSON.parse(response.data));\n+    res.send(JSON.parse(response.data));\n   };\n \n //   checkValidation = (req) => {\n //     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643933863213,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n \n     console.log('RESPONSE items ', response.data);\n \n-    res.send(JSON.parse(response.data));\n+    res.send(response.data).json();\n   };\n \n //   checkValidation = (req) => {\n //     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643933877609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n \n     console.log('RESPONSE items ', response.data);\n \n-    res.send(response.data).json();\n+    res.send(response.data);\n   };\n \n //   checkValidation = (req) => {\n //     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643933974516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,11 +9,11 @@\n   getAllFeeds = async (req, res, next) => {\n     console.log('getAllFeeds');\n     const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n \n-    console.log('RESPONSE items ', response.data);\n+    console.log('RESPONSE dog ', response.data);\n \n-    res.send(response.data);\n+    res.status(200).json(response.data);\n   };\n \n //   checkValidation = (req) => {\n //     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643933990174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n   getAllFeeds = async (req, res, next) => {\n     console.log('getAllFeeds');\n     const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n \n-    console.log('RESPONSE dog ', response.data);\n+    console.log('RESPONSE dog ', response);\n \n     res.status(200).json(response.data);\n   };\n \n"
                },
                {
                    "date": 1643934002840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n \n     console.log('RESPONSE dog ', response);\n \n-    res.status(200).json(response.data);\n+    res.status(200).json(response.json());\n   };\n \n //   checkValidation = (req) => {\n //     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643934020763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n \n     console.log('RESPONSE dog ', response);\n \n-    res.status(200).json(response.json());\n+    res.status(200).json(response);\n   };\n \n //   checkValidation = (req) => {\n //     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643934051823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,13 +7,13 @@\n \n class FeedController {\n   getAllFeeds = async (req, res, next) => {\n     console.log('getAllFeeds');\n-    const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n+    const response = await axios.get('https://dog.ceo/api/breeds/list/all');\n \n-    console.log('RESPONSE dog ', response);\n+    console.log('RESPONSE dog ', response.data);\n \n-    res.status(200).json(response);\n+    res.status(200).json(response.data);\n   };\n \n //   checkValidation = (req) => {\n //     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643934057177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,13 +7,13 @@\n \n class FeedController {\n   getAllFeeds = async (req, res, next) => {\n     console.log('getAllFeeds');\n-    const response = await axios.get('https://dog.ceo/api/breeds/list/all');\n+    const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n \n-    console.log('RESPONSE dog ', response.data);\n+    console.log('RESPONSE dog ', response);\n \n-    res.status(200).json(response.data);\n+    res.status(200).json(response);\n   };\n \n //   checkValidation = (req) => {\n //     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643934331174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,26 +1,11 @@\n-const Feed = require('../models/feedModel');\n-const HttpException = require('../utils/HttpException.utils');\n-// const { validationResult } = require('express-validator');\n-const dotenv = require('dotenv');\n const axios = require('axios');\n-dotenv.config();\n \n-class FeedController {\n-  getAllFeeds = async (req, res, next) => {\n-    console.log('getAllFeeds');\n-    const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n+const getFeeds = async (req, res) => {\n+  const response = await axios.get(\n+    'https://www.flickr.com/services/feeds/photos_public.gne?format=json'\n+  );\n \n-    console.log('RESPONSE dog ', response);\n+  return res.status(200).json(response.data);\n+};\n \n-    res.status(200).json(response);\n-  };\n-\n-//   checkValidation = (req) => {\n-//     const errors = validationResult(req);\n-//     if (!errors.isEmpty()) {\n-//       throw new HttpException(400, 'Validation faild', errors);\n-//     }\n-//   };\n-}\n-\n-module.exports = new FeedController();\n+module.exports = { getFeeds };\n"
                },
                {
                    "date": 1643934431007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,8 @@\n   const response = await axios.get(\n     'https://www.flickr.com/services/feeds/photos_public.gne?format=json'\n   );\n \n-  return res.status(200).json(response.data);\n+  return res.status(200).json(response.data.items);\n };\n \n module.exports = { getFeeds };\n"
                },
                {
                    "date": 1643934458286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,26 @@\n+const Feed = require('../models/feedModel');\n+const HttpException = require('../utils/HttpException.utils');\n+// const { validationResult } = require('express-validator');\n+const dotenv = require('dotenv');\n const axios = require('axios');\n+dotenv.config();\n \n-const getFeeds = async (req, res) => {\n-  const response = await axios.get(\n-    'https://www.flickr.com/services/feeds/photos_public.gne?format=json'\n-  );\n+class FeedController {\n+  getAllFeeds = async (req, res, next) => {\n+    console.log('getAllFeeds');\n+    const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n \n-  return res.status(200).json(response.data.items);\n-};\n+    console.log('RESPONSE dog ', response.data);\n \n-module.exports = { getFeeds };\n+    res.status(200).json(response.data);\n+  };\n+\n+//   checkValidation = (req) => {\n+//     const errors = validationResult(req);\n+//     if (!errors.isEmpty()) {\n+//       throw new HttpException(400, 'Validation faild', errors);\n+//     }\n+//   };\n+}\n+\n+module.exports = new FeedController();\n"
                },
                {
                    "date": 1643934676619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,20 +7,31 @@\n \n class FeedController {\n   getAllFeeds = async (req, res, next) => {\n     console.log('getAllFeeds');\n-    const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n+    // const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n \n-    console.log('RESPONSE dog ', response.data);\n+    // console.log('RESPONSE dog ', response.data);\n \n+    axios\n+      .get(\n+        'https://api.flickr.com/services/feeds/photos_public.gne?format=json'\n+      )\n+      .then((response) => {\n+        return response.json();\n+      })\n+      .catch(function (error) {\n+        console.log(error);\n+      });\n+\n     res.status(200).json(response.data);\n   };\n \n-//   checkValidation = (req) => {\n-//     const errors = validationResult(req);\n-//     if (!errors.isEmpty()) {\n-//       throw new HttpException(400, 'Validation faild', errors);\n-//     }\n-//   };\n+  //   checkValidation = (req) => {\n+  //     const errors = validationResult(req);\n+  //     if (!errors.isEmpty()) {\n+  //       throw new HttpException(400, 'Validation faild', errors);\n+  //     }\n+  //   };\n }\n \n module.exports = new FeedController();\n"
                },
                {
                    "date": 1643934692038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     // const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n \n     // console.log('RESPONSE dog ', response.data);\n \n-    axios\n+    const result = axios\n       .get(\n         'https://api.flickr.com/services/feeds/photos_public.gne?format=json'\n       )\n       .then((response) => {\n@@ -22,9 +22,9 @@\n       .catch(function (error) {\n         console.log(error);\n       });\n \n-    res.status(200).json(response.data);\n+    res.status(200).json(result);\n   };\n \n   //   checkValidation = (req) => {\n   //     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643934728222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n       .get(\n         'https://api.flickr.com/services/feeds/photos_public.gne?format=json'\n       )\n       .then((response) => {\n-        return response.json();\n+        return response.data;\n       })\n       .catch(function (error) {\n         console.log(error);\n       });\n"
                },
                {
                    "date": 1643934756315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,31 +7,20 @@\n \n class FeedController {\n   getAllFeeds = async (req, res, next) => {\n     console.log('getAllFeeds');\n-    // const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n+    const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n \n-    // console.log('RESPONSE dog ', response.data);\n+    console.log('RESPONSE dog ', response.data);\n \n-    const result = axios\n-      .get(\n-        'https://api.flickr.com/services/feeds/photos_public.gne?format=json'\n-      )\n-      .then((response) => {\n-        return response.data;\n-      })\n-      .catch(function (error) {\n-        console.log(error);\n-      });\n-\n-    res.status(200).json(result);\n+    res.status(200).json(response.data);\n   };\n \n-  //   checkValidation = (req) => {\n-  //     const errors = validationResult(req);\n-  //     if (!errors.isEmpty()) {\n-  //       throw new HttpException(400, 'Validation faild', errors);\n-  //     }\n-  //   };\n+//   checkValidation = (req) => {\n+//     const errors = validationResult(req);\n+//     if (!errors.isEmpty()) {\n+//       throw new HttpException(400, 'Validation faild', errors);\n+//     }\n+//   };\n }\n \n module.exports = new FeedController();\n"
                },
                {
                    "date": 1643963200177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,14 +6,11 @@\n dotenv.config();\n \n class FeedController {\n   getAllFeeds = async (req, res, next) => {\n-    console.log('getAllFeeds');\n-    const response = await axios.get('https://api.flickr.com/services/feeds/photos_public.gne?format=json');\n+    const feeds = await Feed.getFeeds();\n \n-    console.log('RESPONSE dog ', response.data);\n-\n-    res.status(200).json(response.data);\n+    res.send(feeds);\n   };\n \n //   checkValidation = (req) => {\n //     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643963618375,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,10 @@\n class FeedController {\n   getAllFeeds = async (req, res, next) => {\n     const feeds = await Feed.getFeeds();\n \n+    console.log(feeds.json())\n+\n     res.send(feeds);\n   };\n \n //   checkValidation = (req) => {\n"
                },
                {
                    "date": 1643963641052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,11 +8,9 @@\n class FeedController {\n   getAllFeeds = async (req, res, next) => {\n     const feeds = await Feed.getFeeds();\n \n-    console.log(feeds.json())\n-\n-    res.send(feeds);\n+    res.status(200).json(feeds);\n   };\n \n //   checkValidation = (req) => {\n //     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643963666367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n class FeedController {\n   getAllFeeds = async (req, res, next) => {\n     const feeds = await Feed.getFeeds();\n \n-    res.status(200).json(feeds);\n+    res.status(200).text(feeds);\n   };\n \n //   checkValidation = (req) => {\n //     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643963675911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n class FeedController {\n   getAllFeeds = async (req, res, next) => {\n     const feeds = await Feed.getFeeds();\n \n-    res.status(200).text(feeds);\n+    res.status(200).json(feeds);\n   };\n \n //   checkValidation = (req) => {\n //     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643963788667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,18 +6,19 @@\n dotenv.config();\n \n class FeedController {\n   getAllFeeds = async (req, res, next) => {\n+    this.checkValidation(req);\n     const feeds = await Feed.getFeeds();\n \n     res.status(200).json(feeds);\n   };\n \n-//   checkValidation = (req) => {\n-//     const errors = validationResult(req);\n-//     if (!errors.isEmpty()) {\n-//       throw new HttpException(400, 'Validation faild', errors);\n-//     }\n-//   };\n+  checkValidation = (req) => {\n+    const errors = validationResult(req);\n+    if (!errors.isEmpty()) {\n+      throw new HttpException(400, 'Validation faild', errors);\n+    }\n+  };\n }\n \n module.exports = new FeedController();\n"
                },
                {
                    "date": 1643963811861,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n const Feed = require('../models/feedModel');\n const HttpException = require('../utils/HttpException.utils');\n-// const { validationResult } = require('express-validator');\n+const { validationResult } = require('express-validator');\n const dotenv = require('dotenv');\n const axios = require('axios');\n dotenv.config();\n \n"
                },
                {
                    "date": 1643963831642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,16 @@\n const Feed = require('../models/feedModel');\n const HttpException = require('../utils/HttpException.utils');\n const { validationResult } = require('express-validator');\n const dotenv = require('dotenv');\n-const axios = require('axios');\n dotenv.config();\n \n class FeedController {\n   getAllFeeds = async (req, res, next) => {\n     this.checkValidation(req);\n     const feeds = await Feed.getFeeds();\n \n-    res.status(200).json(feeds);\n+    res.status(200).send(feeds);\n   };\n \n   checkValidation = (req) => {\n     const errors = validationResult(req);\n"
                },
                {
                    "date": 1643963883241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,10 @@\n   getAllFeeds = async (req, res, next) => {\n     this.checkValidation(req);\n     const feeds = await Feed.getFeeds();\n \n+    console.log('feeds ', feeds['jsonFlickrFeed']);\n+\n     res.status(200).send(feeds);\n   };\n \n   checkValidation = (req) => {\n"
                },
                {
                    "date": 1643963907069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   getAllFeeds = async (req, res, next) => {\n     this.checkValidation(req);\n     const feeds = await Feed.getFeeds();\n \n-    console.log('feeds ', feeds['jsonFlickrFeed']);\n+    console.log('feeds ', feeds.jsonFlickrFeed);\n \n     res.status(200).send(feeds);\n   };\n \n"
                },
                {
                    "date": 1643963920871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   getAllFeeds = async (req, res, next) => {\n     this.checkValidation(req);\n     const feeds = await Feed.getFeeds();\n \n-    console.log('feeds ', feeds.jsonFlickrFeed);\n+    console.log('feeds ', feeds.jsonFlickrFeed());\n \n     res.status(200).send(feeds);\n   };\n \n"
                },
                {
                    "date": 1643963931431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,10 +8,8 @@\n   getAllFeeds = async (req, res, next) => {\n     this.checkValidation(req);\n     const feeds = await Feed.getFeeds();\n \n-    console.log('feeds ', feeds.jsonFlickrFeed());\n-\n     res.status(200).send(feeds);\n   };\n \n   checkValidation = (req) => {\n"
                },
                {
                    "date": 1644077289428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,15 @@\n \n     res.status(200).send(feeds);\n   };\n \n+  getAllFeeds = async (req, res, next) => {\n+    this.checkValidation(req);\n+    const feeds = await Feed.getSearchedFeeds({ tags: req.params.tags });\n+\n+    res.status(200).send(feeds);\n+  };\n+\n   checkValidation = (req) => {\n     const errors = validationResult(req);\n     if (!errors.isEmpty()) {\n       throw new HttpException(400, 'Validation faild', errors);\n"
                },
                {
                    "date": 1644077325967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n \n     res.status(200).send(feeds);\n   };\n \n-  getAllFeeds = async (req, res, next) => {\n+  getSearchedFeeds = async (req, res, next) => {\n     this.checkValidation(req);\n     const feeds = await Feed.getSearchedFeeds({ tags: req.params.tags });\n \n     res.status(200).send(feeds);\n"
                }
            ],
            "date": 1643932034868,
            "name": "Commit-0",
            "content": "const Feed = require('../models/feedModel');\nconst HttpException = require('../utils/HttpException.utils');\nconst { validationResult } = require('express-validator');\nconst dotenv = require('dotenv');\ndotenv.config();\n\nclass FeedController {\n  getAllArtikli = async (req, res, next) => {\n    let artikli = await Artikal.find();\n\n    artikli = artikli.map((item) => {\n      if (item.tarifen_broj_ddv === 2) {\n        item.tarifen_broj_ddv = 18;\n      } else if (item.tarifen_broj_ddv === 1) {\n        item.tarifen_broj_ddv = 5;\n      }\n\n      return item;\n    });\n\n    res.send(artikli);\n  };\n\n  checkValidation = (req) => {\n    const errors = validationResult(req);\n    if (!errors.isEmpty()) {\n      throw new HttpException(400, 'Validation faild', errors);\n    }\n  };\n}\n\nmodule.exports = new FeedController();\n"
        }
    ]
}